services:
  ot-assessment-api:
    build:
      context: .
      dockerfile: OT.Assessment.Api/Dockerfile
    container_name: ot-assessment-api
    hostname: ot-assessment-api
    environment:
      - REFERENCE_DB__SERVER=mssql-server
      - REFERENCE_DB__DATABASE_NAME=OTAssessment
      - REFERENCE_DB__USER=sa
      - REFERENCE_DB__PASSWORD=5tr0ngP@55w0rD
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:5000
    ports:
      - 5000
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
      mssql-server:
        condition: service_started
    networks:
      - ot-assessment-network
    restart: always

  ot-assessment-casino-wager-consumer-worker:
    build:
      context: .
      dockerfile: OT.Assessment.ConsumeCasinoWager.Worker/Dockerfile
    container_name: casino-wager-consumer-worker
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - ot-assessment-network
    healthcheck:
      test: ["CMD-SHELL", "pgrep dotnet || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
 
  ot-assessment-casino-wager-producer-worker:
    build:
      context: .
      dockerfile: OT.Assessment.ProduceCasinoWager.Worker/Dockerfile
    container_name: casino-wager-producer-worker
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - ot-assessment-network
    healthcheck:
      test: ["CMD-SHELL", "pgrep dotnet || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
  
  ot-assessment-tester:
    build:
      context: .
      dockerfile: OT.Assessment.Tester/Dockerfile
    container_name: ot-assessment-tester
    hostname: ot-assessment-tester
    depends_on:
      ot-assessment-api:
        condition: service_started
    networks:
      - ot-assessment-network
  
  mssql-server:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: mssql-server
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=5tr0ngP@55w0rD
    ports:
      - "1433:1433"
    networks:
      - ot-assessment-network
    volumes:
      - mssql_data:/var/opt/mssql

  redis:
    image: redis:7.2-alpine
    container_name: redis-tls
    hostname: redis-tsl
    ports:
      - "6379:6379"
    volumes:
      - ./redis.conf:/usr/local/etc/redis/redis.conf
      - ./tls/users.acl:/usr/local/etc/redis/users.acl
      - ./tls:/tls
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
    networks:
      - ot-assessment-network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "5tr0ngP@55w0rD", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq-container
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=default
      - RABBITMQ_DEFAULT_PASS=5tr0ngP@55w0rD
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - ot-assessment-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_running"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  rabbitmq_data:
    driver: local
  mssql_data:
    driver: local
  redis-data:
  
networks:
  ot-assessment-network:
    name: ot-assessment-network
    driver: bridge